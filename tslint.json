{
  "extends": [
    "tslint:recommended"
  ],
  "rulesDirectory": [
    "node_modules/codelyzer"
  ],
  "rules": {
    //把只有一个调用签名的接口或文字类型写为函数类型
    "callable-types": true,
    //类名和接口名 执行PascalCase
    "class-name": true,
    //执行单行注释的格式化规则:加空格
    "comment-format": [
      true,
      "check-space"
    ],
    //if / for / do / while语句强制大括号
    "curly": true,
    //强制文件以换行符结尾
    "eofline": true,
    //在for in 语句中 必须使用if 过滤
    "forin": false,
    //禁止通过导入和要求直接导入指定的模块。相反，只能从该模块导入子模块。
    "import-blacklist": [true, "rxjs"],
    //导入格式 加空格
    "import-spacing": true,
    //强制使用空格符缩进
    "indent": [
      true,
      "spaces"
    ],
    //接口类型声明,使用一个接口而不是类型文字 type T = { ... }
    "interface-over-type-literal": false,
    //允许标签出现在 do/for/while/switch 语句中
    "label-position": true,
    //一行最大长度
    "max-line-length": [
      true,
      180
    ],
    //为类成员提供明确的可见性声明
    "member-access": false,
    //成员规范
    "member-ordering": [
      true,
      //静态方法在实例方法前
      "static-before-instance",
      //变量在函数前
      "variables-before-functions"
    ],
    //不允许使用 arguments.callee
    "no-arg": true,
    //不允许位运算符
    "no-bitwise": true,
    //不允许使用下列console方法
    "no-console": [
      true,
      "debug",
      "info",
      "time",
      "timeEnd",
      "trace"
    ],
    //不允许访问String，Number和Boolean的构造函数。
    "no-construct": true,
    //不允许出现debugger
    "no-debugger": true,
    //不允许重复声明变量在同一块级作用域
    "no-duplicate-variable": true,
    //不允许存在空块
    "no-empty": false,
    //不允许出现空的接口 {}
    "no-empty-interface": false,
    //不允许使用eval
    "no-eval": true,
    //不允许对初始化为数字，字符串或布尔值的变量或参数进行显式类型声明。
    "no-inferrable-types": false,
    //不允许一个变量在多个作用域中声明
    "no-shadowed-variable": false,
    //不允许对象使用字符串keys来访问
    "no-string-literal": false,
    //不能直接抛出自定义错误异常
    "no-string-throw": true,
    //switch语句中 多个case连续的时候 使用   /* falls through */  或者合并  eg: case 1,2 : xxxx
    "no-switch-case-fall-through": true,
    //一行的结尾处不能存在多余空格
    "no-trailing-whitespace": true,
    //禁用未使用的表达式
    "no-unused-expression": true,
    //未声明前禁止使用
    "no-use-before-declare": false,
    //禁用var
    "no-var-keyword": true,
    //对象keys排序
    "object-literal-sort-keys": false,
    //要求一行上需要特殊的令牌
    "one-line": [
      true,
      // 大括号和前面的表达式在同一行
      "check-open-brace",
       //检查try和catch在同一行
      "check-catch",
      //检查指定令牌之前的空格
      "check-whitespace"
    ],
    //要求使用const而不是let 或var
    "prefer-const": true,
    //引号
    "quotemark": [
      true,
      //使用单引号
      "single",
      //特殊情况下允许使用其他引号
      "avoid-escape"
    ],
    //在调用parseInt时必须使用基数
    "radix": true,
    //在每个陈述结束时强制使用一致的分号。
    "semicolon": [
      "always"
    ],
    //三位运算符 使用===和!==，替代==和!=
    "triple-equals": [
      true,
      //在检查undefined时允许使用==和!=
      "allow-undefined-check"
    ],
    // 冒号后面是否加空格
    "typedef-whitespace": [
      true,
      {
        "call-signature": "nospace",
        "index-signature": "nospace",
        "parameter": "nospace",
        "property-declaration": "nospace",
        "variable-declaration": "nospace"
      },
      {
        "call-signature": "onespace",
        "index-signature": "onespace",
        "parameter": "onespace",
        "property-declaration": "onespace",
        "variable-declaration": "onespace"
      }
    ],
    //确保typeof的结果与正确的字符串值进行比较
    "typeof-compare": true,
    //统一签名
    "unified-signatures": true,
    //变量命名
    "variable-name": false,
    //空格规范
    "whitespace": [
      true,
      //分支语句要有空格 if/else/for/while
      "check-branch",
      //变量声明要有
      "check-decl",
      //操作符要有
      "check-operator",
      //检查分隔符后的空格（，/;）
      "check-separator",
      //在可变类型规范之前检查空格
      "check-type",
      //检查import & export 中的空格
      "check-module"
    ],
    //逗号规范  单行不允许 多行必须要
    "trailing-comma": [true, { "singleline": "never"}],
    //imports导入排序
    "ordered-imports": false,
    //接口命名不允许使用字母 I 开头
    "interface-name": [true, "never-prefix"],
    //只允许箭头函数
    "only-arrow-functions": false,
    //尽可能使用ES6对象文字速记
    "object-literal-shorthand": false,
    //推荐使用for of
    "prefer-for-of": false,
    //文件最多包含的class数
    "max-classes-per-file": [true, 5],

    "directive-selector": [true, "attribute", "camelCase"],
    "component-selector": [true, "element", "kebab-case"],
    "use-input-property-decorator": true,
    "use-output-property-decorator": true,
    "use-host-property-decorator": true,
    "no-input-rename": true,
    "no-output-rename": true,
    "use-life-cycle-interface": true,
    "use-pipe-transform-interface": true,
    "component-class-suffix": true,
    "directive-class-suffix": true,
    "no-access-missing-member": false,
    "templates-use-public": false,
    "invoke-injectable": true
  }
}
